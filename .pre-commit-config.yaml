#     ____             __  __
#    / __ \____ ______/ / / /___
#   / /_/ / __ `/ ___/ / / / __ \
#  / ____/ /_/ / /__/ /_/ / /_/ /
# /_/    \__,_/\___/\____/ .___/
#                       /_/
#
# Copyright (C) 2022-present
#
# This file is part of PacUp
#
# PacUp is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PacUp is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PacUp.  If not, see <https://www.gnu.org/licenses/>.

ci:
  skip: [codespell, black, isort, mypy]
repos:
  # General
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: trailing-whitespace
  # Misc
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.1
    hooks:
      - id: insert-license
        args: ["--license-filepath=LICENSE_BOILERPLATE", "--detect-license-in-X-top-lines=20"]
        exclude: '^(.github|.git)'
        types: [text]
  # Python
  - repo: local
    hooks:
      - id: codespell
        name: Check for misspellings
        description: Checks for common misspellings in text files
        args: [--check-hidden, --check-filenames, --builtin, clear, rare, informal, usage, code]
        language: system
        entry: poetry run codespell
        types: [text]
      - id: black
        name: Format python code
        description: Automatically format code to follow the black code style
        language: system
        entry: poetry run black
        types_or: [python, pyi]
        require_serial: true
      - id: isort
        name: Sort python imports
        description: Automatically sort import statements
        language: system
        entry: poetry run isort
        types_or: [cython, pyi, python]
        require_serial: true
      - id: mypy
        name: Type check python code
        description: Static type checker for Python
        language: system
        entry: poetry run mypy
        types_or: [python, pyi]
        require_serial: true
# vim:set ft=yaml ts=2 sw=2 et:
